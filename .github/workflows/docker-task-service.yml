name: Docker Task Service CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'microservices/task-service/**'
      - '.github/workflows/docker-task-service.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'microservices/task-service/**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: dragomirmindrescu/task-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./microservices/task-service
        file: ./microservices/task-service/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate version tag
      if: github.event_name != 'pull_request'
      id: version
      run: |
        # Generate version based on date and commit
        VERSION=$(date +%Y.%m.%d)-$(echo ${{ github.sha }} | cut -c1-7)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Tag and push versioned image
      if: github.event_name != 'pull_request'
      run: |
        VERSION=${{ steps.version.outputs.version }}
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
        echo "Pushed version: $VERSION"

    - name: Update latest tag
      if: github.event_name != 'pull_request'
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        echo "Updated latest tag"

